name: build and deploy

on:
  workflow_dispatch:

  push:
  pull_request:
    branches:
      - 'master'

env:
  PROJECT_NAME: saltmarsh
  DOCKER_RUN_ARGUMENTS: '--env-file /root/Saltmarsh/env_file'


concurrency:
  group: "deploy"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build Dockerfile
        run: docker build -t $PROJECT_NAME .

      - name: Save Dockerfile as tar
        run: docker save -o $PROJECT_NAME.tar $PROJECT_NAME:latest

      - name: pwd
        run: |
        pwd
        ls -la

      - name: Save Docker image
        uses: actions/upload-artifact@master
        with:
          name: $PROJECT_NAME.tar
          path: /home/runner/work/Saltmarsh/Saltmarsh/saltmarsh.tar
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Retrieve Docker image
        uses: actions/download-artifact@master
        with:
          name: $PROJECT_NAME.tar
          path: ./$PROJECT_NAME.tar

      - name: Install SSH Client
        run: sudo apt-get install openssh-client -y

      - name: Run ls
        run: ls -la

      - name: SCP Image
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: $PROJECT_NAME.tar
          target: ~/Saltmarsh

      - name: SSH, Load & Run Dockerfile
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          script: |
            cd Saltmarsh
            docker kill $PROJECT_NAME
            docker container prunce --force
            docker image rm $PROJECT_NAME
            docker load --input $PROJECT_NAME.tar
            rm $PROJET_NAME.tar
            docker run -d --name=$PROJECT_NAME $DOCKER_RUN_ARGUMENTS $PROJECT_NAME
            exit
